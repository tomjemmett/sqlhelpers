% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/queryDb.R
\name{queryDb}
\alias{queryDb}
\title{Run a query against a database}
\usage{
queryDb(server, database, query, ...)
}
\arguments{
\item{server}{The name of the DSN for the server you want to connect to, or the name
of a environment variable (with the prefix R_DB_)}

\item{database}{The name of the database that you want to run the query against}

\item{query}{The query as a string that you want to run against the database}

\item{...}{Named parameters to interpolate into the query}
}
\value{
The results of the query as a tibble
}
\description{
This function allows you to run a query against a database, returning the
results in a tibble.
}
\details{
The query is passed as an argument. See \link{queryDbFromFile} if you want to
read the query from a file.

The connection to the server is made by odbc and uses the name of a DSN to
connect to. This removes any requirement to hard code in usernames, passwords
and connection strings into files.

Altenatively, you can create an environment variable called R_DB_[SERVER]
as a json string that contains all of the parameters to pass to dbConnect.

Parameters can be used in queries by either specifying each parameter and
it's value after the query parameter, or by specifying all of the parameters
in a named list.
}
\examples{
\dontrun{
queryDb("MyServerName", "MyDatabase", "SELECT * FROM Table")

queryDb("MyServerName",
        "MyDatabase",
        "SELECT * FROM Table WHERE Id = ?id AND Date = ?date",
        id = 1,
        date = Sys.Date())

params <- list(id = 1, date = Sys.Date())
queryDb("MyServerName",
        "MyDatabase",
        "SELECT * FROM Table WHERE Id = ?id AND Date = ?date",
        params)
}
}
